{
  // here we will define our Constraint set
  ConstraintSets: { //2 constraint sets - Start and End
    //1. Start Constraint
    start: {
      back_arrow_img: {  // Assigned ID for profile pic, which we'll use in the code for the reference
        width: 24,
        height: 24,
        start: ['parent', 'start', 16], //Start Constraint => [Constraining to what, where, Margin]
        top: ['parent', 'top', 16], //Top Constraint
        custom: {
          color: '#FFFFFF'
        }
      },
      toolbar_text: {
        top: ['back_arrow_img', 'top'],
        bottom: ['back_arrow_img', 'bottom'],
        start: ['back_arrow_img', 'end', 16],
        custom: {
          color: '#FFFFFF'
        }
      },
      toolbar_img: {
        width: 24,
        height: 24,
        top: ['back_arrow_img', 'top'],
        bottom: ['back_arrow_img', 'bottom'],
        end: ['parent', 'end', 16],
        custom: {
          color: '#FFFFFF'
        }
      },
      bg_toolbar_img: {
        top: ['back_arrow_img', 'top'],
        bottom: ['back_arrow_img', 'bottom'],
        start: ['parent', 'start', 16],
        end: ['parent', 'end', 16],
        custom: {
          visible: 'gone'
        }
      },
      content_text: {
        top: ['parent', 'top'],
        bottom: ['back_arrow_img', 'bottom'],
        start: ['parent', 'start', 16],
        end: ['parent', 'end', 16],
//        PropertySet: ['visibility', 'gone'],
        visibilty: 'gone',
        custom: {
          color: '#FFFFFF'
        }
      },
      launch_now_button: {
        top: ['content_text', 'bottom', -100],
        start: ['parent', 'start', 16],
        end: ['parent', 'end', 16],
        visibility: 'invisible',
      },
      box: {  //Background
        width: 'spread',  //spread -> is for fill constraints. Like in XML you'd set width/height = '0dp' to let it fill the available area only.
        height: 56,
        start: ['parent', 'start'],
        end: ['parent', 'end'],
        top: ['parent', 'top'],
//        bottom: ['parent', 'bottom'],  //-16 -> for bottom space
      }
    },

    //2. End Constraint
    end: {
      back_arrow_img: {  // Assigned ID for profile pic, which we'll use in the code for the reference
        width: 24,
        height: 24,
        start: ['parent', 'start', 16], //Start Constraint => [Constraining to what, where, Margin]
        top: ['parent', 'top', 16], //Top Constraint
        custom: {
          color: '#FFFFFF'
        }
      },
      toolbar_img: {
        width: 56,
        height: 56,
        top: ['back_arrow_img', 'top', 12],
        start: ['parent', 'start', 16],
        end: ['parent', 'end', 16],
        custom: {
          color: '#eb0029'
        }
      },
      bg_toolbar_img: {
        top: ['back_arrow_img', 'top', 32],
        bottom: ['back_arrow_img', 'bottom'],
        start: ['parent', 'start', 16],
        end: ['parent', 'end', 16],
        custom: {
          visible: 'gone'
        }
      },
      toolbar_text: {
        top: ['toolbar_img', 'bottom', 16],
        start: ['parent', 'start', 16],
        end: ['parent', 'end', 16],
        custom: {
          color: '#2C3539'
        }
      },
      content_text: {
        top: ['toolbar_text', 'bottom', 16],
        start: ['parent', 'start', 16],
        end: ['parent', 'end', 16],
//        PropertySet: 'visibility = visible',
        visibilty: 'visible',
        custom: {
          color: '#2C3539'
        }
      },
      launch_now_button: {
        top: ['content_text', 'bottom'],
        start: ['content_text', 'start'],
        end: ['content_text', 'end'],
        visibility: 'visible',
      },
      box: {  //Background
        width: 'spread',  //spread -> is for fill constraints. Like in XML you'd set width/height = '0dp' to let it fill the available area only.
        height: 56,
        start: ['parent', 'start'],
        end: ['parent', 'end'],
        top: ['parent', 'top'],
//        bottom: ['parent', 'bottom'],  //-16 -> for bottom space
      }
  },
  Transitions: {  //to set transition properties between Start and End point.
    default: {  //we'll have only one transition between Start and End. So we named it as Default. Your choice after all :D
      from: 'start',
      to: 'end',
      pathMotionArc: 'startHorizontal', // Text will move down with slight circular arc
      keyFrame: {
        KeyAttribute: [ //We define different Attr and how we want this to Animate, during transition for specific composable
          {
            target: 'back_arrow_img',
            frames: [0, 100], //For frames we pass a List containing number between 0 - 100
            rotationZ: [0, 180],
            alpha: [100, 1]
          },
          {
            target: 'toolbar_text',
            frames: [0, 50, 100],
            translationX: [0, 70, 0],
          },
          ],
        },
      }
    }
  }
}